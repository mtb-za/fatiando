# Build, package, test, and clean Fatiando

TESTDIR=tmp-test-dir-with-unique-name
PEP8ARGS=--show-source --ignore=W503,E226,E241 --exclude=_version.py

help:
	@echo "Commands:"
	@echo ""
	@echo "    develop       install fatiando in editable mode"
	@echo "    cython        generate C code from Cython files"
	@echo "    test          run the test suite (including doctests)"
	@echo "    pep8          check for PEP8 style compliance"
	@echo "    pep8-stats    print a summary of the PEP8 check"
	@echo "    coverage      calculate test coverage using Coverage"
	@echo "    clean         clean up build and generated files"
	@echo ""

develop:
	pip install --no-deps -e .

cython:
	python setup.py build_ext --inplace --cython

test:
	# Run a tmp folder to make sure the tests are run on the installed version
	# of Fatiando
	mkdir -p $(TESTDIR)
	cd $(TESTDIR); python -c "import fatiando; fatiando.test()"
	rm -r $(TESTDIR)

coverage:
	# Run a tmp folder to make sure the tests are run on the installed version
	# of Fatiando
	mkdir -p $(TESTDIR)
	cd $(TESTDIR); python -c "import fatiando; fatiando.test(coverage=True)"
	rm -r $(TESTDIR)

pep8:
	pep8 $(PEP8ARGS) fatiando cookbook gallery setup.py

pep8-stats:
	pep8 $(PEP8ARGS) --statistics -qq fatiando cookbook gallery setup.py

clean:
	find . -name "*.so" -exec rm -v {} \;
	find . -name "*.pyc" -exec rm -v {} \;
	rm -rvf build dist MANIFEST fatiando.egg-info __pycache__ .coverage .cache
	# Trash generated by the doctests
	rm -rvf mydata.txt mylogfile.log
	# The stuff fetched by the cookbook recipes
	rm -rvf logo.png cookbook/logo.png
	rm -rvf crust2.tar.gz cookbook/crust2.tar.gz
	rm -rvf bouguer_alps_egm08.grd cookbook/bouguer_alps_egm08.grd
	rm -rvf *.gdf cookbook/*.gdf
	rm -rvf $(TESTDIR)
